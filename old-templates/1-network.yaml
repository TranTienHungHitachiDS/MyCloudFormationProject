AWSTemplateFormatVersion: "2010-09-09"

#------------------------------------------------------
# Parameters
#------------------------------------------------------
Parameters:
  ProjectName:
    Type: String
  Env:
    Type: String
    Default: dev
  VpcCIDR:
    Description: IP range for VPC
    Type: String
    Default: 10.0.0.0/16

#------------------------------------------------------
# Mappings
#------------------------------------------------------
Mappings:
  CidrMappings:
    public-subnet-1:
      CIDR: 10.0.0.0/24
    public-subnet-2:
      CIDR: 10.0.1.0/24
    private-app-subnet-1:
      CIDR: 10.0.2.0/24
    private-app-subnet-2:
      CIDR: 10.0.3.0/24
    private-data-subnet-1:
      CIDR: 10.0.4.0/24
    private-data-subnet-2:
      CIDR: 10.0.5.0/24

#------------------------------------------------------
# Resources: VPC, Subnets, NAT, Routes
#------------------------------------------------------
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Env}-vpc
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Env

  #------------------------------------------------------
  # Internet Gateway
  #------------------------------------------------------
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Env}-ig
        - Key: Environment
          Value: !Ref Env

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  #------------------------------------------------------
  # Public Subnets
  #------------------------------------------------------
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: { Ref: AWS::Region }
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrMappings, public-subnet-1, CIDR]
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Env}-public-subnet-1
        - Key: Environment
          Value: !Ref Env

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: { Ref: AWS::Region }
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrMappings, public-subnet-2, CIDR]
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Env}-public-subnet-2
        - Key: Environment
          Value: !Ref Env

  #------------------------------------------------------
  # Private App Subnets
  #------------------------------------------------------
  PrivateAppSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: false
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: { Ref: AWS::Region }
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrMappings, private-app-subnet-1, CIDR]
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Env}-private-app-subnet-1
        - Key: Environment
          Value: !Ref Env

  PrivateAppSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: false
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: { Ref: AWS::Region }
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrMappings, private-app-subnet-2, CIDR]
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Env}-private-app-subnet-2
        - Key: Environment
          Value: !Ref Env

  #------------------------------------------------------
  # Private Data Subnets (FIXED)
  #------------------------------------------------------
  PrivateDataSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: false
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: { Ref: AWS::Region }
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrMappings, private-data-subnet-1, CIDR]
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Env}-private-data-subnet-1
        - Key: Environment
          Value: !Ref Env

  PrivateDataSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: false
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: { Ref: AWS::Region }
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [CidrMappings, private-data-subnet-2, CIDR]
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Env}-private-data-subnet-2
        - Key: Environment
          Value: !Ref Env

  #------------------------------------------------------
  # NAT Gateway
  #------------------------------------------------------
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: VPC
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Env}-nat-gw
        - Key: Environment
          Value: !Ref Env

  #------------------------------------------------------
  # Public Route Table
  #------------------------------------------------------
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Env}-public-rt
        - Key: Environment
          Value: !Ref Env

  RouteInternetGateway:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  #------------------------------------------------------
  # Private Route Table
  #------------------------------------------------------
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Env}-private-rt
        - Key: Environment
          Value: !Ref Env

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  #------------------------------------------------------
  # Subnet Associations
  #------------------------------------------------------
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateAppSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateAppSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateAppSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateAppSubnet2
      RouteTableId: !Ref PrivateRouteTable

  PrivateDataSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateDataSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateDataSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateDataSubnet2
      RouteTableId: !Ref PrivateRouteTable

#------------------------------------------------------
# Outputs
#------------------------------------------------------
Outputs:
  VpcId:
    Value: !Ref VPC
    Export:
      Name: !Sub ${ProjectName}-${Env}-vpc-id

  PublicSubnetIds:
    Description: IDs of the public subnets
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub ${ProjectName}-${Env}-public-subnet-ids

  PrivateAppSubnetIds:
    Description: IDs of the app private subnets
    Value: !Join [",", [!Ref PrivateAppSubnet1, !Ref PrivateAppSubnet2]]
    Export:
      Name: !Sub ${ProjectName}-${Env}-private-app-subnet-ids  

  PrivateDataSubnetIds:
    Description: IDs of the data private subnets
    Value: !Join [",", [!Ref PrivateDataSubnet1, !Ref PrivateDataSubnet2]]
    Export:
      Name: !Sub ${ProjectName}-${Env}-private-data-subnet-ids