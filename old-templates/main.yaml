AWSTemplateFormatVersion: "2010-09-09"

#------------------------------------------------------
# Parameters
#------------------------------------------------------
Parameters:
  ProjectName:
    Type: String
    Default: MyCloudFormationProject

  Env:
    Type: String
    Default: dev

  BackendDockerImage:
    Type: String
    Default: "hungtran679/dkhp_demo-backend-service:ecs"
  FrontendDockerImage:
    Type: String
    Default: "hungtran679/dkhp_demo-frontend-service:ecs"
  
  BackendPort:
    Type: Number
    Default: 8080
  FrontendPort:
    Type: Number
    Default: 80

#------------------------------------------------------
# Nested Stack
#------------------------------------------------------
Resources:  
  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 1-network.yaml
      Parameters:
        ProjectName: !Ref ProjectName
        Env: !Ref Env

  SecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 2-security_group.yaml
      Parameters:
        ProjectName: !Ref ProjectName
        Env: !Ref Env
        VpcId: !GetAtt NetworkStack.Outputs.VpcId
        BackendPort: !Ref BackendPort
        FrontendPort: !Ref FrontendPort
  
  IamStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 3-iam.yaml
      Parameters:
        ProjectName: !Ref ProjectName
        Env: !Ref Env

  LoadBalancerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 4-load_balancer.yaml
      Parameters:
        ProjectName: !Ref ProjectName
        Env: !Ref Env
        VpcId: !GetAtt NetworkStack.Outputs.VpcId
        PublicSubnetIds: !GetAtt NetworkStack.Outputs.PublicSubnetIds
        LoadBalancerSgId: !GetAtt SecurityGroupStack.Outputs.LoadBalancerSgId
        BackendPort: !Ref BackendPort
        FrontendPort: !Ref FrontendPort
  
  EC2Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 5-ec2.yaml
      Parameters:
        ProjectName: !Ref ProjectName
        Env: !Ref Env
        PublicSubnetIds: !GetAtt NetworkStack.Outputs.PublicSubnetIds
        Ec2BastionSgId: !GetAtt SecurityGroupStack.Outputs.Ec2BastionSgId

  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 6-database.yaml
      Parameters:
        ProjectName: !Ref ProjectName
        Env: !Ref Env
        PrivateDataSubnetIds: !GetAtt NetworkStack.Outputs.PrivateDataSubnetIds
        DatabaseSgId: !GetAtt SecurityGroupStack.Outputs.DatabaseSgId
  
  EcsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 7-ecs.yaml
      Parameters:
        ProjectName: !Ref ProjectName
        Env: !Ref Env

        BackendDockerImage: !Ref BackendDockerImage
        FrontendDockerImage: !Ref FrontendDockerImage

        BackendPort: !Ref BackendPort
        FrontendPort: !Ref FrontendPort

        VpcId: !GetAtt NetworkStack.Outputs.VpcId
        PrivateAppSubnetIds: !GetAtt NetworkStack.Outputs.PrivateAppSubnetIds

        EcsTaskRoleArn: !GetAtt IamStack.Outputs.EcsTaskRoleArn
        EcsTaskExecutionRoleArn: !GetAtt IamStack.Outputs.EcsTaskExecutionRoleArn
        EcsAutoScalingRoleArn: !GetAtt IamStack.Outputs.EcsAutoScalingRoleArn

        BackendTargetGroupArn: !GetAtt LoadBalancerStack.Outputs.BackendTargetGroupArn
        FrontendTargetGroupArn: !GetAtt LoadBalancerStack.Outputs.FrontendTargetGroupArn

        EcsBackendServiceSgId: !GetAtt SecurityGroupStack.Outputs.EcsBackendServiceSgId
        EcsFrontendServiceSgId: !GetAtt SecurityGroupStack.Outputs.EcsFrontendServiceSgId

        DBCredentialSecretArn: !GetAtt DatabaseStack.Outputs.DBCredentialSecretArn
        JDBCConnectionString: !GetAtt DatabaseStack.Outputs.JDBCConnectionString


        
        
