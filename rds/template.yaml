AWSTemplateFormatVersion: "2010-09-09"

#------------------------------------------------------
# Parameters
#------------------------------------------------------
Parameters:
  ProjectName:
    Type: String
  Env:
    Type: String
  
  KmsCallerAccountId:
    Description: The AWS Account ID that is allowed to use the KMS key
    Type: String
  
  DbPort:
    Description: RDS database port
    Type: String
  DbUser:
    Description: The root database username
    Type: String
  DbInstanceClass:
    Description: The compute instance class of database
    Type: String


#------------------------------------------------------
# Resources: RDS Cluster, DB Group, Instace 
#------------------------------------------------------
Resources:
  #------------------------------------------------------
  # DB Credential
  #------------------------------------------------------ 
  DBCredential:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "${ProjectName}-${Env}-rds-db-secret"
      GenerateSecretString:
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
        RequireEachIncludedType: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-rds-db-secret"
        - Key: Environment
          Value: !Ref Env
  
  #------------------------------------------------------
  # Database Security group 
  #------------------------------------------------------
  DbSecurityGroup:
    UpdateReplacePolicy: Delete
    Type: AWS::EC2::SecurityGroup
    DeletionPolicy: Delete
    Properties:
      GroupName: !Sub ${ProjectName}-${Env}-rds-sg
      GroupDescription: Security group for RDS Aurora Postgresql DB
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${ProjectName}-${Env}-vpc-id"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref DbPort
          ToPort: !Ref DbPort
          CidrIp: "0.0.0.0/0"
      SecurityGroupEgress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
  
  #------------------------------------------------------
  # DB Subnet Groups
  #------------------------------------------------------ 
  DbSubnetGroup:
    UpdateReplacePolicy: Delete
    Type: AWS::RDS::DBSubnetGroup
    DeletionPolicy: Delete
    Properties:
      DBSubnetGroupDescription: "App DB Subnet Group"
      DBSubnetGroupName: !Sub "${ProjectName}-${Env}-rds-db-subnet-group"
      SubnetIds:
      - Fn::ImportValue: 
          Fn::Sub: "${ProjectName}-${Env}-private-data-subnet-1-id"
      - Fn::ImportValue: 
          Fn::Sub: "${ProjectName}-${Env}-private-data-subnet-2-id"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-rds-db-subnet-group"
        - Key: Environment
          Value: !Ref Env
  
  #------------------------------------------------------
  # RDS Cluster
  #------------------------------------------------------
  RdsDbCluster:
    UpdateReplacePolicy: Delete
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Delete
    Properties:
      Port: !Ref DbPort
      DBClusterIdentifier: !Sub ${ProjectName}-${Env}-rds-db-cluster
      VpcSecurityGroupIds:
        - !Ref DbSecurityGroup
      Engine: "aurora-postgresql"
      EngineVersion: "16.6"
      StorageType: "aurora"
      DBSubnetGroupName: !Ref DbSubnetGroup
      StorageEncrypted: true
      # DeletionProtection: true
      MasterUsername: !Ref DbUser
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DBCredential}}}'
      BackupRetentionPeriod: 30
      EnableCloudwatchLogsExports:
        - "iam-db-auth-error"
        - "instance"
        - "postgresql"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-rds-db-cluster"
        - Key: Environment
          Value: !Ref Env
  
  #------------------------------------------------------
  # RDS DB Instance
  #------------------------------------------------------
  RdsDbInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      DBInstanceIdentifier: !Sub "${ProjectName}-rds-db-instance"
      DBClusterIdentifier: !Ref RdsDbCluster
      DBInstanceClass: !Ref DbInstanceClass #db.r7g.large
      Engine: "aurora-postgresql"
      # PreferredMaintenanceWindow: wed:14:33-wed:15:03
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Env}-rds-db-instance"
        - Key: Environment
          Value: !Ref Env
  
  #------------------------------------------------------
  # RDS DB Proxy
  #------------------------------------------------------
  RdsDbProxy:
    Type: AWS::RDS::DBProxy
    Properties:
      DBProxyName: !Sub "${ProjectName}-${Env}-rds-db-proxy"
      EngineFamily: POSTGRESQL
      RoleArn:
        Fn::ImportValue: 
          Fn::Sub: ${ProjectName}-${Env}-rds-proxy-role-arn
      RequireTLS: true
      IdleClientTimeout: 1800
      Auth:
        - AuthScheme: SECRETS
          SecretArn: !Ref DBCredential
          IAMAuth: DISABLED
      VpcSubnetIds:
        - Fn::ImportValue: 
            Fn::Sub: "${ProjectName}-${Env}-private-data-subnet-1-id"
        - Fn::ImportValue: 
            Fn::Sub: "${ProjectName}-${Env}-private-data-subnet-2-id"
      VpcSecurityGroupIds:
        - !Ref DbSecurityGroup

  MyDBProxyTargetGroup:
    Type: AWS::RDS::DBProxyTargetGroup
    Properties:
      DBProxyName: !Ref RdsDbProxy
      DBClusterIdentifiers:
        - !Ref RdsDbCluster
      TargetGroupName: default
      ConnectionPoolConfigurationInfo:
        MaxConnectionsPercent: 90
        MaxIdleConnectionsPercent: 50
        ConnectionBorrowTimeout: 120

